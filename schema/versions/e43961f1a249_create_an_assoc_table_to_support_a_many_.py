"""create an assoc table to support a many 2 many relationship between Scene and Character

Revision ID: e43961f1a249
Revises: 9ecae8a9dfd5
Create Date: 2023-07-13 20:04:39.572955

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e43961f1a249'
down_revision = '9ecae8a9dfd5'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Character',
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('notes', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_on', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scenes2characters',
    sa.Column('scene_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['Character.id'], name='FK_Character2Scene'),
    sa.ForeignKeyConstraint(['scene_id'], ['Scene.id'], name='FK_Scene2Character'),
    sa.PrimaryKeyConstraint('scene_id', 'character_id')
    )
    with op.batch_alter_table('Scene', schema=None) as batch_op:
        batch_op.drop_column('characters')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Scene', schema=None) as batch_op:
        batch_op.add_column(sa.Column('characters', sa.VARCHAR(), nullable=False))

    op.drop_table('scenes2characters')
    op.drop_table('Character')
    # ### end Alembic commands ###
